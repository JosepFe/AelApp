// <auto-generated />
using System;
using Devon4Net.WebAPI.Implementation.Domain.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Devon4Net.WebAPI.Implementation.Migrations
{
    [DbContext(typeof(AelContext))]
    partial class AelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:Collation", "en_US.utf8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Devon4Net.WebAPI.Implementation.Domain.Entities.Tax", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TaxDeadlineDate")
                        .HasColumnType("date");

                    b.Property<string>("TaxName")
                        .HasColumnType("character varying");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Taxes");
                });

            modelBuilder.Entity("Devon4Net.WebAPI.Implementation.Domain.Entities.Town", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Community")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<string>("TownName")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.HasKey("Id");

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("Devon4Net.WebAPI.Implementation.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("DNI");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Devon4Net.WebAPI.Implementation.Domain.Entities.UserTax", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("AmountToPay")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("AssignmentDate")
                        .HasColumnType("date");

                    b.Property<double>("BaseAmount")
                        .HasColumnType("double precision");

                    b.Property<bool>("Paid")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("PaymentDeadlineDate")
                        .HasColumnType("date");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<Guid>("TaxId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TownId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TaxId");

                    b.HasIndex("TownId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Tax");
                });

            modelBuilder.Entity("Devon4Net.WebAPI.Implementation.Domain.Entities.UserTown", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("date");

                    b.Property<Guid>("TownId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TownId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("User_Town");
                });

            modelBuilder.Entity("Devon4Net.WebAPI.Implementation.Domain.Entities.UserTax", b =>
                {
                    b.HasOne("Devon4Net.WebAPI.Implementation.Domain.Entities.Tax", "Tax")
                        .WithMany("UserTaxes")
                        .HasForeignKey("TaxId")
                        .HasConstraintName("user_tax_fk_tax")
                        .IsRequired();

                    b.HasOne("Devon4Net.WebAPI.Implementation.Domain.Entities.Town", "Town")
                        .WithMany("UserTaxes")
                        .HasForeignKey("TownId")
                        .HasConstraintName("user_tax_fk_town")
                        .IsRequired();

                    b.HasOne("Devon4Net.WebAPI.Implementation.Domain.Entities.User", "User")
                        .WithMany("UserTaxes")
                        .HasForeignKey("UserId")
                        .HasConstraintName("user_tax_fk_user")
                        .IsRequired();

                    b.Navigation("Tax");

                    b.Navigation("Town");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Devon4Net.WebAPI.Implementation.Domain.Entities.UserTown", b =>
                {
                    b.HasOne("Devon4Net.WebAPI.Implementation.Domain.Entities.Town", "Town")
                        .WithMany("UserTowns")
                        .HasForeignKey("TownId")
                        .HasConstraintName("user_town_fk__town")
                        .IsRequired();

                    b.HasOne("Devon4Net.WebAPI.Implementation.Domain.Entities.User", "User")
                        .WithOne("UserTown")
                        .HasForeignKey("Devon4Net.WebAPI.Implementation.Domain.Entities.UserTown", "UserId")
                        .HasConstraintName("user_town_fk_user")
                        .IsRequired();

                    b.Navigation("Town");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Devon4Net.WebAPI.Implementation.Domain.Entities.Tax", b =>
                {
                    b.Navigation("UserTaxes");
                });

            modelBuilder.Entity("Devon4Net.WebAPI.Implementation.Domain.Entities.Town", b =>
                {
                    b.Navigation("UserTaxes");

                    b.Navigation("UserTowns");
                });

            modelBuilder.Entity("Devon4Net.WebAPI.Implementation.Domain.Entities.User", b =>
                {
                    b.Navigation("UserTaxes");

                    b.Navigation("UserTown");
                });
#pragma warning restore 612, 618
        }
    }
}
